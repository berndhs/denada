#!/bin/bash

# configure script for
#
#  denada
#
# Copyright (C) 2010 Bernd Stramm
#

#/****************************************************************
# * This file is distributed under the following license:
# *
# * Copyright (C) 2010, Bernd Stramm
# *
# *  This program is free software; you can redistribute it and/or
# *  modify it under the terms of the GNU General Public License
# *  as published by the Free Software Foundation; either version 2
# *  of the License, or (at your option) any later version.
# *
# *  This program is distributed in the hope that it will be useful,
# *  but WITHOUT ANY WARRANTY; without even the implied warranty of
# *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# *  GNU General Public License for more details.
# *
# *  You should have received a copy of the GNU General Public License
# *  along with this program; if not, write to the Free Software
# *  Foundation, Inc., 51 Franklin Street, Fifth Floor, 
# *  Boston, MA  02110-1301, USA.
# ****************************************************************/
#


#
# function to determine the name of qmake
#
findqmake () {

  QM=`which qmake`
  QM5=`which qmake-qt5`

  if [ -z $QM ] 
  then
    RES3="0"
  else
    RES3=`$QM -query QT_VERSION`
  fi
  if [ -z $QM5 ]
  then
    RES5="0"
  else
    RES5=`$QM5 -query QT_VERSION`
  fi

  MATCH3=`expr match $RES3 '5.'`
  MATCH5=`expr match $RES5 '5.'`

  QMAKE="qmake"

  if [ $MATCH3 -eq 2 ]
  then
    QMAKE=$QM
  else
    if [ $MATCH5 -eq 2 ]
    then
      QMAKE=$QM5
    else
      echo "cannot find qmake for Qt5"
      exit 1
    fi
  fi
}

#
# function to find distro
#
find_distro () {
DISTRO=linux
if [ -e /etc/system-release ]
then
  DISTRO=`head -1 /etc/system-release \
         | awk '{print $1}' \
         | tr '[:upper:]' '[:lower:]'`
else
  if [ -e /etc/issue ]
  then
    DISTRO=`head -1 /etc/issue \
	| awk '{print $1}' \
	| tr '[:upper:]' '[:lower:]'`
  fi
fi
}


find_lrelease () {

  LREL=`which lrelease`
  LREL5=`which lrelease-qt5`

  if [ -z $LREL ] 
  then
    RES3="0"
  else
    RES3=`$LREL -version`
  fi
  if [ -z $LREL5 ]
  then
    RES5="0"
  else
    RES5=`$LREL5 -version`
  fi

  LRMATCH3=`expr match "$RES3" 'lrelease version 5.'`
  LRMATCH5=`expr match "$RES5" 'lrelease version 5.'`

  LRELEASE="lrelease"

  if [ $LRMATCH3 -eq 19 ]
  then
    LRELEASE=$LREL
  else
    if [ $LRMATCH5 -eq 19 ]
    then
      LRELEASE=$LREL5
    else
      echo "cannot find LRELEASE for Qt5"
      exit 1
    fi
  fi
}

#
# function to tell the user about options
#
usage () {
   echo 
   echo "$0 [OPTIONS]"
   echo
   echo "Options:"
   echo "--help             Show this help message and quit"
   echo "--prefix=PREFIX    Install into PREFIX [${PREFIX}]"
   echo
}


#
# main configure script
#

COPYRIGHT=" Copyright (C) 2010 Bernd Stramm"
PREFIX=/usr
OPTIONS_FILE=options.pri
find_distro

# 
# command line arguments:
# see if they said anything about prefix
#
while test $# != 0
do
  case $1 in
  --*=*)
  ac_option=`expr "X$1" : 'X\([^=]*\)='`
  ac_optarg=`expr "X$1" : 'X[^=]*=\(.*\)'`
  ac_shift=:
  ;;
 *)
  ac_option=$1
  ac_optarg=$2
  ac_shift=shift
  ;;
  esac

case $ac_option in
  --help)
   usage
   exit 0
   ;;
  --prefix)
   PREFIX=$ac_optarg
   $ac_shift
   ;;
  *)
   echo "Bad option " $ac_option " " $ac_optarg
   usage
   shift
   ;;
  esac
shift

done 

#
# see if we are on windows and need a special name for "make"
#

OSLEN=`expr match "Z$OS" "ZWindow"`
if [ $OSLEN -gt 5 ] ; then
  MAKE_PROGRAM="mingw32-make.exe"
  QMAKE="qmake.exe"
  LRELEASE="lrelease.exe"
  DISTRO="win32"
else
  MAKE_PROGRAM="make"
  # 
  # check what qmake is called on this system
  #
  findqmake
  find_lrelease
fi

#
# make options include file for qmake
#
echo "DISTRO = ${DISTRO}" > ${OPTIONS_FILE}
echo "CONFIG += ${DISTRO}" >> ${OPTIONS_FILE}
echo "DEFINES += DISTRO_${DISTRO}=1" >> ${OPTIONS_FILE}
#
# generate Makefile
#
# first shove in everything we found out
#
echo "#" > Makefile
echo "# Makefile generated by configure" >> Makefile
echo "# Faux automake" >> Makefile
echo "# ${COPYRIGHT}" >> Makefile
echo "#" >> Makefile
echo "PREFIX=${PREFIX}" >> Makefile
echo "DESTDIR=\${PREFIX}/bin" >> Makefile
echo "QMAKE = $QMAKE" >> Makefile
echo "MAKE = ${MAKE_PROGRAM}" >> Makefile
echo "LRELEASE = ${LRELEASE}" >> Makefile
#
# next concatenate the Makefile.in content
#
cat Makefile.in >> Makefile

#
# tell the user what to do next
#
showmsg () {
  echo "     " $* 
  echo $* >> config.last
}

echo "" > config.last
showmsg ""
showmsg 'qmake is..................' $QMAKE
showmsg 'Installation prefix is....' $PREFIX 
showmsg 'Distro setting is.........' $DISTRO
showmsg 'Now you can build with....' $MAKE_PROGRAM 

